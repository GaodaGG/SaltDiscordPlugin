<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/gg/SaltSteamPlugin/SteamApiNative.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/gg/SaltSteamPlugin/SteamApiNative.java" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/gg/SaltSteamPlugin/discord/DiscordSDK.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/gg/SaltSteamPlugin/discord/DiscordSDK.java" />
              <option name="originalContent" value="package com.gg.SaltSteamPlugin.discord;&#10;&#10;import com.sun.jna.Library;&#10;import com.sun.jna.Native;&#10;import com.sun.jna.Pointer;&#10;import com.sun.jna.Structure;&#10;import com.sun.jna.Callback;&#10;import java.io.File;&#10;import java.io.IOException;&#10;import java.io.InputStream;&#10;import java.nio.file.Files;&#10;import java.nio.file.Path;&#10;import java.nio.file.StandardCopyOption;&#10;&#10;public interface DiscordSDK extends Library {&#10;    DiscordSDK INSTANCE = loadLibrary();&#10;&#10;    static DiscordSDK loadLibrary() {&#10;        try {&#10;            // 首先尝试从系统路径加载&#10;            return Native.load(&quot;discord_partner_sdk&quot;, DiscordSDK.class);&#10;        } catch (UnsatisfiedLinkError e1) {&#10;            try {&#10;                // 尝试从资源文件中提取并加载&#10;                String libraryName = &quot;discord_partner_sdk.dll&quot;;&#10;                InputStream is = DiscordSDK.class.getResourceAsStream(&quot;/&quot; + libraryName);&#10;                if (is != null) {&#10;                    // 创建临时文件&#10;                    Path tempFile = Files.createTempFile(&quot;discord_partner_sdk&quot;, &quot;.dll&quot;);&#10;                    Files.copy(is, tempFile, StandardCopyOption.REPLACE_EXISTING);&#10;                    is.close();&#10;&#10;                    // 从临时文件加载&#10;                    return Native.load(tempFile.toString(), DiscordSDK.class);&#10;                }&#10;            } catch (IOException e2) {&#10;                // 忽略并继续下一个尝试&#10;            }&#10;&#10;            // 最后尝试从当前目录加载&#10;            try {&#10;                File dllFile = new File(&quot;discord_partner_sdk.dll&quot;);&#10;                if (dllFile.exists()) {&#10;                    return Native.load(dllFile.getAbsolutePath(), DiscordSDK.class);&#10;                }&#10;            } catch (UnsatisfiedLinkError e3) {&#10;                // 忽略&#10;            }&#10;&#10;            // 所有方法都失败，抛出原始异常&#10;            throw new RuntimeException(&quot;无法加载 Discord SDK 库文件: &quot; + e1.getMessage(), e1);&#10;        }&#10;    }&#10;&#10;    // Discord Result枚举&#10;    int DiscordResult_Ok = 0;&#10;    int DiscordResult_ServiceUnavailable = 1;&#10;    int DiscordResult_InvalidVersion = 2;&#10;    int DiscordResult_LockFailed = 3;&#10;    int DiscordResult_InternalError = 4;&#10;    int DiscordResult_InvalidPayload = 5;&#10;    int DiscordResult_InvalidCommand = 6;&#10;    int DiscordResult_InvalidPermissions = 7;&#10;    int DiscordResult_NotFetched = 8;&#10;    int DiscordResult_NotFound = 9;&#10;    int DiscordResult_Conflict = 10;&#10;    int DiscordResult_InvalidSecret = 11;&#10;    int DiscordResult_InvalidJoinSecret = 12;&#10;    int DiscordResult_NoEligibleActivity = 13;&#10;    int DiscordResult_Invited = 14;&#10;    int DiscordResult_DiscordNotInstalled = 15;&#10;    int DiscordResult_InsufficientBuffer = 16;&#10;    int DiscordResult_PurchaseCanceled = 17;&#10;    int DiscordResult_InvalidGuild = 18;&#10;    int DiscordResult_InvalidEvent = 19;&#10;    int DiscordResult_InvalidChannel = 20;&#10;    int DiscordResult_InvalidOrigin = 21;&#10;    int DiscordResult_RateLimited = 22;&#10;    int DiscordResult_OAuth2Error = 23;&#10;    int DiscordResult_SelectChannelTimeout = 24;&#10;    int DiscordResult_GetGuildTimeout = 25;&#10;    int DiscordResult_SelectVoiceForceRequired = 26;&#10;    int DiscordResult_CaptureShortcutAlreadyListening = 27;&#10;    int DiscordResult_UnauthorizedForAchievement = 28;&#10;    int DiscordResult_InvalidGiftCode = 29;&#10;    int DiscordResult_PurchaseError = 30;&#10;    int DiscordResult_TransactionAborted = 31;&#10;    &#10;    // 回调接口&#10;    interface DiscordCallback extends Callback {&#10;        void callback(int result, Pointer ref);&#10;    }&#10;    &#10;    // 创建Discord实例&#10;    int DiscordCreate(long version, Pointer createParams, Pointer result);&#10;    &#10;    // 运行回调&#10;    int DiscordRunCallbacks(Pointer discord);&#10;    &#10;    // 销毁实例&#10;    void DiscordDestroy(Pointer discord);&#10;    &#10;    // Activity Manager相关方法&#10;    Pointer DiscordGetActivityManager(Pointer discord);&#10;    int DiscordActivityManagerUpdateActivity(Pointer manager, Pointer activity, Pointer callbackData, DiscordCallback callback);&#10;    int DiscordActivityManagerClearActivity(Pointer manager, Pointer callbackData, DiscordCallback callback);&#10;}" />
              <option name="updatedContent" value="package com.gg.SaltSteamPlugin.discord;&#10;&#10;import com.sun.jna.Library;&#10;import com.sun.jna.Native;&#10;import com.sun.jna.Pointer;&#10;import com.sun.jna.Structure;&#10;import com.sun.jna.Callback;&#10;import java.io.File;&#10;import java.io.IOException;&#10;import java.io.InputStream;&#10;import java.nio.file.Files;&#10;import java.nio.file.Path;&#10;import java.nio.file.StandardCopyOption;&#10;&#10;public interface DiscordSDK extends Library {&#10;    DiscordSDK INSTANCE = loadLibrary();&#10;&#10;    static DiscordSDK loadLibrary() {&#10;        try {&#10;            // 首先尝试从系统路径加载&#10;            return Native.load(&quot;discord_partner_sdk&quot;, DiscordSDK.class);&#10;        } catch (UnsatisfiedLinkError e1) {&#10;            try {&#10;                // 尝试从资源文件中提取并加载&#10;                String libraryName = &quot;discord_partner_sdk.dll&quot;;&#10;                InputStream is = DiscordSDK.class.getResourceAsStream(&quot;/&quot; + libraryName);&#10;                if (is != null) {&#10;                    // 创建临时文件&#10;                    Path tempFile = Files.createTempFile(&quot;discord_partner_sdk&quot;, &quot;.dll&quot;);&#10;                    Files.copy(is, tempFile, StandardCopyOption.REPLACE_EXISTING);&#10;                    is.close();&#10;&#10;                    // 从临时文件加载&#10;                    return Native.load(tempFile.toString(), DiscordSDK.class);&#10;                }&#10;            } catch (IOException e2) {&#10;                // 忽略并继续下一个尝试&#10;            }&#10;&#10;            // 最后尝试从当前目录加载&#10;            try {&#10;                File dllFile = new File(&quot;discord_partner_sdk.dll&quot;);&#10;                if (dllFile.exists()) {&#10;                    return Native.load(dllFile.getAbsolutePath(), DiscordSDK.class);&#10;                }&#10;            } catch (UnsatisfiedLinkError e3) {&#10;                // 忽略&#10;            }&#10;&#10;            // 所有方法都失败，抛出原始异常&#10;            throw new RuntimeException(&quot;无法加载 Discord SDK 库文件: &quot; + e1.getMessage(), e1);&#10;        }&#10;    }&#10;&#10;    // Discord Result枚举&#10;    int DiscordResult_Ok = 0;&#10;    int DiscordResult_ServiceUnavailable = 1;&#10;    int DiscordResult_InvalidVersion = 2;&#10;    int DiscordResult_LockFailed = 3;&#10;    int DiscordResult_InternalError = 4;&#10;    int DiscordResult_InvalidPayload = 5;&#10;    int DiscordResult_InvalidCommand = 6;&#10;    int DiscordResult_InvalidPermissions = 7;&#10;    int DiscordResult_NotFetched = 8;&#10;    int DiscordResult_NotFound = 9;&#10;    int DiscordResult_Conflict = 10;&#10;    int DiscordResult_InvalidSecret = 11;&#10;    int DiscordResult_InvalidJoinSecret = 12;&#10;    int DiscordResult_NoEligibleActivity = 13;&#10;    int DiscordResult_Invited = 14;&#10;    int DiscordResult_DiscordNotInstalled = 15;&#10;    int DiscordResult_InsufficientBuffer = 16;&#10;    int DiscordResult_PurchaseCanceled = 17;&#10;    int DiscordResult_InvalidGuild = 18;&#10;    int DiscordResult_InvalidEvent = 19;&#10;    int DiscordResult_InvalidChannel = 20;&#10;    int DiscordResult_InvalidOrigin = 21;&#10;    int DiscordResult_RateLimited = 22;&#10;    int DiscordResult_OAuth2Error = 23;&#10;    int DiscordResult_SelectChannelTimeout = 24;&#10;    int DiscordResult_GetGuildTimeout = 25;&#10;    int DiscordResult_SelectVoiceForceRequired = 26;&#10;    int DiscordResult_CaptureShortcutAlreadyListening = 27;&#10;    int DiscordResult_UnauthorizedForAchievement = 28;&#10;    int DiscordResult_InvalidGiftCode = 29;&#10;    int DiscordResult_PurchaseError = 30;&#10;    int DiscordResult_TransactionAborted = 31;&#10;    &#10;    // 回调接口&#10;    interface DiscordCallback extends Callback {&#10;        void callback(int result, Pointer ref);&#10;    }&#10;    &#10;    // 创建Discord实例&#10;    int DiscordCreate(long version, Pointer createParams, Pointer result);&#10;    &#10;    // 运行回调&#10;    int DiscordRunCallbacks(Pointer discord);&#10;    &#10;    // 销毁实例&#10;    void DiscordDestroy(Pointer discord);&#10;    &#10;    // Activity Manager相关方法&#10;    Pointer DiscordGetActivityManager(Pointer discord);&#10;    int DiscordActivityManagerUpdateActivity(Pointer manager, Pointer activity, Pointer callbackData, DiscordCallback callback);&#10;    int DiscordActivityManagerClearActivity(Pointer manager, Pointer callbackData, DiscordCallback callback);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>